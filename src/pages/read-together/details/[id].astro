---
import BookDetails from '@/layouts/book-details.astro'

import { Button } from "@/components/ui/button";

import { FcBrokenLink } from "react-icons/fc";

import {books} from '@/config/books'


export function getStaticPaths() {

  return books.map(b => ({params:{id:b.id}}))
}

const { id } = Astro.params;


const book = books.find( b => b.id === id )!

---
<BookDetails title="共读系列">
  <div class="bg-background-200 h-full">
    <section class="container py-18">
      <div class="info flex">
        <!-- 封面 -->
        <div class="cover w-full h-[820px]   rounded-md overflow-hidden bg-muted-foreground/15">
   <img
            src={book.image}
            class="size-full  object-center"
            alt=""
          /> 
        </div>
 
        <div class="more px-4 h-[820px]">

          <div class="title">
            <div class="name-description">
              <h1
                class="text-balance font-heading text-3xl sm:text-4xl md:text-6xl lg:text-[32px]"
              >
                <font style="vertical-align: inherit;"
                  ><span class="font-extrabold"
                    ><font style="vertical-align: inherit;">
                      {book.title}
                    </font></span
                  ></font
                ><span class="text-gradient_indigo-purple font-extrabold"
                  ><font style="vertical-align: inherit;"></font></span
                >
              </h1>

              <p
                class="text-balance leading-normal text-muted-foreground sm:text-xs sm:leading-8 mt-4"
              >
                <font style="vertical-align: inherit;">
                  <font style="vertical-align: inherit;"
                    >{book.description}</font
                  >
                </font>
              </p>
            </div>
          </div>

          
          <div class="catalogue  overflow-hidden">
            <div class="catalogue-item py-12 ">

              <div class="item-container">
              {
                book.chapter.map((m,index) => {
                  if(index%2 === 0){
                      return (
                         <div class="content" >
              <div class="right sm:text-2xl md:text-3xl lg:text-[32px] text-gradient_indigo-purple" >{index+1 < 10 ? (index+1).toString().padStart(2, '0') : (index+1).toString() }</div>
              <div  class="right sm:text-1xl md:text-2xl lg:text-[14px]" >
                <a href={m.href}>{m.title}</a>
                </div>
            </div>
                      )
                  }else {
return (
  <div class="content" >
              <div class="left sm:text-2xl md:text-4xl lg:text-[32px] text-gradient_indigo-purple">{index+1 < 10 ? (index+1).toString().padStart(2, '0') : (index+1).toString() }</div>
              <div class="left sm:text-1xl md:text-2xl lg:text-[14px]" > <a href={m.href}>{m.title}</a></div>
            </div>
)
                  }
                })
              }
              </div>


            </div>
          </div>

        
        
         <div class="link-container">     
            <Button
                    variant="secondary"
                    size="sm"
                    rounded="xl"
                    className="px-4"
                  >
                    <a href={book.link} class="flex items-center gap-2">
                      <span>原文地址</span>
                      <FcBrokenLink></FcBrokenLink>
                    </a>
                  </Button></div>
        </div>
     
      
      </div>
    </section>
  </div>
</BookDetails>

<style lang="less">
  .info {
    overflow: hidden;
  }

  .cover {
    flex: 2;
  }

  .more {
    display: flex;
    flex-direction: column;
    flex: 4;

    .catalogue {
      flex: 1;
      .catalogue-item {
        overflow-y: auto;
        height: 100%;
   /*      position: relative;

                 &::before {
        content: "";
        position: absolute;
        display: block;
        height: calc(100% - 6rem);
        width: 3px;
        left:50%;
        background-color: skyblue;
      } */

        .item-container {
          min-height: 100%;
         position: relative;
            &::before {
        content: "";
        position: absolute;
        display: block;
        height: 100%;
        width: 2px;
        left:50%;
        background-color: #ccc;
        } 

        }

        .content {
          display: flex;
          flex-direction: column;

          padding-top: 1rem;
          padding-bottom: 1.45rem;

          div {
            width: 50%;
          }

          .left {
            padding-right: 1rem;
            text-align: right;
          }
       
          .right {
            position: relative;
            padding-left: 1rem;

            left :50%;
          }
        
      }


   
    }

   
  }

   .link-container {
      display: flex;
      justify-content: flex-end;
      align-items: center;
      height: 4rem;
    }

}
</style>
